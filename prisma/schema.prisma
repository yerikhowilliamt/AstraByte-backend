// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
}

model User {
  id                  Int         @id                             @default(autoincrement())
  name                String      @db.VarChar(100)
  email               String      @db.VarChar(100)                @unique
  emailVerified       DateTime?                                   @map("email_verified")
  password            String?     @db.VarChar(100)
  refreshToken        String?     @db.Text                        @map("refresh_token")
  image               String?
  role                UserRole    @default(CUSTOMER)

  createdAt           DateTime    @default(now())                 @map("created_at")
  updatedAt           DateTime    @updatedAt                      @map("updated_at")

  accounts            Account[]
  contacts            Contact[]

  @@map("users")
}

model Account {
  id                  Int         @id               @default(autoincrement())
  userId              Int                           @map("user_id")
  provider            String
  providerAccountId   String      @unique           @map("provider_account_id")
  refreshToken        String?     @db.Text          @map("refresh_token")

  createdAt           DateTime    @default(now())   @map("created_at")
  updatedAt           DateTime    @updatedAt        @map("updated_at")
 
  user                User        @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@index([userId])
  @@index([providerAccountId])
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Contact {
  id                  Int         @id                @default(autoincrement())
  userId              Int                            @map("user_id")
  phone               String      @db.VarChar(20)

  createdAt           DateTime    @default(now())    @map("created_at")
  updatedAt           DateTime    @updatedAt         @map("updated_at")

  user                User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("contacts")
}
